<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="Scalar.cs.props" />
  <PropertyGroup>
    <ProjectGuid>{A4984251-840E-4622-AD0C-66DFCE2B2574}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Scalar.PreBuild</RootNamespace>
    <AssemblyName>Scalar.PreBuild</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="GenerateApplicationManifests.cs" />
    <Compile Include="GenerateScalarInstallersNuspec.cs" />
    <Compile Include="GenerateGitVersionConstants.cs" />
    <Compile Include="GenerateG4WNugetReference.cs" />
    <Compile Include="GenerateInstallScripts.cs" />
    <Compile Include="GenerateVersionInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <BuildProps Include="Scalar.props">
      <SubType>Designer</SubType>
    </BuildProps>
    <BuildProps Include="Scalar.cs.props">
      <SubType>Designer</SubType>
    </BuildProps>
    <BuildProps Include="Scalar.cpp.props">
      <SubType>Designer</SubType>
    </BuildProps>
    <GeneratedPackageConfig Include="packages.config" />
  </ItemGroup>

  <Target Name="GetTargetFrameworkProperties" />
  <Target Name="GetNativeManifest" />
  <Target Name="GetCopyToOutputDirectoryItems" />
  <Target Name="Publish" />

  <!-- The following targets are defined here so that we can build
       this project without emitting an assembly. -->
  <Target Name="BuiltProjectOutputGroup" />
  <Target Name="BuiltProjectOutputGroupDependencies" />
  <Target Name="DebugSymbolsProjectOutputGroup" />
  <Target Name="DebugSymbolsProjectOutputGroupDependencies" />
  <Target Name="DocumentationProjectOutputGroup" />
  <Target Name="DocumentationProjectOutputGroupDependencies" />
  <Target Name="SatelliteDllsProjectOutputGroup" />
  <Target Name="SatelliteDllsProjectOutputGroupDependencies" />
  <Target Name="SGenFilesOutputGroup" />
  <Target Name="SGenFilesOutputGroupDependencies" />

  <UsingTask TaskName="GenerateG4WNugetReference" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <GitPackageVersion ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Class" Source="GenerateG4WNugetReference.cs" />
    </Task>
  </UsingTask>

  <UsingTask TaskName="GenerateGitVersionConstants" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <GitPackageVersion ParameterType="System.String" Required="true" />
      <PackagesPath ParameterType="System.String" Required="true" />
      <OutputFile ParameterType="System.String" Required="true" />
      <LatestInstaller ParameterType="System.String" Output="true" />
      <LatestInstallerFilename ParameterType="System.String" Output="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Class" Source="GenerateGitVersionConstants.cs" />
    </Task>
  </UsingTask>

  <UsingTask TaskName="GenerateInstallScripts" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <GitInstallerFilename ParameterType="System.String" Required="true" />
      <ScalarSetupFilename ParameterType="System.String" Required="true" />
      <GitInstallBatPath ParameterType="System.String" Required="true" />
      <ScalarInstallBatPath ParameterType="System.String" Required="true" />
      <UnifiedInstallBatPath ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Class" Source="GenerateInstallScripts.cs" />
    </Task>
  </UsingTask>

  <UsingTask TaskName="GenerateScalarInstallersNuspec" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <ScalarSetupPath ParameterType="System.String" Required="true" />
      <GitPackageVersion ParameterType="System.String" Required="true" />
      <PackagesPath ParameterType="System.String" Required="true" />
      <OutputFile ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Class" Source="GenerateScalarInstallersNuspec.cs" />
    </Task>
  </UsingTask>

  <UsingTask TaskName="GenerateVersionInfo" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <Version ParameterType="System.String" Required="true" />
      <AssemblyVersion ParameterType="System.String" Required="true" />
      <VersionHeader ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Class" Source="GenerateVersionInfo.cs" />
    </Task>
  </UsingTask>

  <UsingTask TaskName="GenerateApplicationManifests" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <Version ParameterType="System.String" Required="true" />
      <ApplicationName ParameterType="System.String" Required="true" />
      <ManifestPath ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Class" Source="GenerateApplicationManifests.cs" />
    </Task>
  </UsingTask>

  <PropertyGroup>
    <ScalarSetupFilename>SetupScalar.$(ScalarVersion).exe</ScalarSetupFilename>
    <ScalarSetupPath>$(BuildOutputDir)\Scalar.Installer.Windows\bin\x64\$(Configuration)\SetupScalar.$(ScalarVersion).exe</ScalarSetupPath>
    <OutDir>$(BuildOutputDir)\Scalar.Build\</OutDir>
    <GitVersionConstantsPath>$(OutDir)ScalarConstants.GitVersion.cs</GitVersionConstantsPath>
    <G4WInstallBatPath>$(OutDir)InstallG4W.bat</G4WInstallBatPath>
    <ScalarInstallBatPath>$(OutDir)InstallScalar.bat</ScalarInstallBatPath>
    <UnifiedInstallBatPath>$(OutDir)InstallProduct.bat</UnifiedInstallBatPath>
    <ScalarInstallerNuspecPath>$(OutDir)Scalar.Installers.nuspec</ScalarInstallerNuspecPath>
    <AssemblyVersionPath>$(BuildOutputDir)\CommonAssemblyVersion.cs</AssemblyVersionPath>
    <VersionHeaderPath>$(BuildOutputDir)\CommonVersionHeader.h</VersionHeaderPath>
    <RestoreTimestampPath>$(BuildOutputDir)\restore.timestamp</RestoreTimestampPath>
  </PropertyGroup>

  <Target Name="Clean" DependsOnTargets="$(CleanDependsOn)">
    <Delete Files="packages.config" />
    <RemoveDir Directories="$(BuildOutputDir)\$(MSBuildProjectName)" />
    <Delete Files="$(BuildOutputDir)\CommonAssemblyVersion.cs;$(BuildOutputDir)\CommonVersionHeader.h" />
  </Target>
  <Target Name="Build" DependsOnTargets="GenerateShared;$(BuildDependsOn)" />
  <Target Name="Rebuild" DependsOnTargets="Clean;Build;$(RebuildDependsOn)" />

  <ItemDefinitionGroup>
    <ApplicationNeedsManifest>
      <Visible>false</Visible>
    </ApplicationNeedsManifest>
  </ItemDefinitionGroup>

  <ItemGroup>
    <ApplicationNeedsManifest Include="Scalar.Service" />
  </ItemGroup>

  <Target Name="ScalarPreBuild"
          Inputs="$(MSBuildThisFileFullPath);$(MSBuildProjectFullPath);$(MSBuildThisFileDirectory)GenerateG4WNugetReference.cs;@(BuildProps)"
          Outputs="@(GeneratedPackageConfig)">
    <GenerateG4WNugetReference GitPackageVersion="$(GitPackageVersion)" Condition="'$(OS)' == 'Windows_NT'" />
  </Target>

  <Target Name="ScalarPackageRestore"
          Inputs="$(MSBuildThisFileFullPath);$(MSBuildProjectFullPath);@(GeneratedPackageConfig)"
          Outputs="$(RestoreTimestampPath)"
          DependsOnTargets="ScalarPreBuild"
          Condition="'$(OS)' == 'Windows_NT'">
    <Exec Command="call $(MSBuildThisFileDirectory)..\Scripts\RestorePackages.bat $(Configuration)"
          WorkingDirectory="$(MSBuildThisFileDirectory)../" />
    <MakeDir Directories="$(BuildOutputDir)"/>
    <Touch Files="$(RestoreTimestampPath)" AlwaysCreate="true" />
  </Target>

  <Target Name="GenerateInstallScripts" 
          DependsOnTargets="ScalarPackageRestore;$(GenerateInstallScriptsDependsOn)"
          Inputs="$(RestoreTimestampPath);@(GeneratedPackageConfig);$(MSBuildThisFileFullPath);$(MSBuildProjectFullPath);$(MSBuildThisFileDirectory)GenerateGitVersionConstants.cs;$(MSBuildThisFileDirectory)GenerateInstallScripts.cs;$(MSBuildThisFileDirectory)GenerateScalarInstallersNuspec.cs"
          Outputs="$(GitVersionConstantsPath);$(G4WInstallBatPath);$(ScalarInstallBatPath);$(ScalarInstallerNuspecPath);$(UnifiedInstallBatPath);$(OutDir)$(G4WInstallerFilename)"
          Condition="'$(OS)' == 'Windows_NT'">
    <GenerateGitVersionConstants GitPackageVersion="$(GitPackageVersion)" PackagesPath="$(PackagesDir)" OutputFile="$(GitVersionConstantsPath)">
      <Output TaskParameter="LatestInstaller" PropertyName="G4WInstaller" />
      <Output TaskParameter="LatestInstallerFilename" PropertyName="G4WInstallerFilename" />
    </GenerateGitVersionConstants>
    <GenerateInstallScripts GitInstallerFilename="$(G4WInstallerFilename)"
                            ScalarSetupFilename="$(ScalarSetupFilename)"
                            GitInstallBatPath="$(G4WInstallBatPath)"
                            ScalarInstallBatPath="$(ScalarInstallBatPath)"
                            UnifiedInstallBatPath="$(UnifiedInstallBatPath)"/>
    <GenerateScalarInstallersNuspec ScalarSetupPath="$(ScalarSetupPath)" GitPackageVersion="$(GitPackageVersion)" PackagesPath="$(PackagesDir)" OutputFile="$(ScalarInstallerNuspecPath)" />
    <Copy SourceFiles="$(G4WInstaller)" DestinationFiles="$(OutDir)\$(G4WInstallerFilename)" />
  </Target>

  <Target Name="GenerateShared"
          DependsOnTargets="GenerateInstallScripts;$(GenerateSharedDependsOn)"
          Inputs="$(RestoreTimestampPath);@(GeneratedPackageConfig);$(MSBuildThisFileFullPath);$(MSBuildProjectFullPath);$(MSBuildThisFileDirectory)GenerateVersionInfo.cs;$(MSBuildThisFileDirectory)GenerateApplicationManifests.cs"
          Outputs="$(AssemblyVersionPath);$(VersionHeaderPath);@(ApplicationNeedsManifest->'%(OutputFile)')">
    <GenerateVersionInfo Version="$(ScalarVersion)" AssemblyVersion="$(AssemblyVersionPath)" VersionHeader="$(VersionHeaderPath)" />
    <GenerateApplicationManifests Version="$(ScalarVersion)" ApplicationName="@(ApplicationNeedsManifest)" ManifestPath="$(BuildOutputDir)\@(ApplicationNeedsManifest).exe.manifest" />  
  </Target>
</Project>
